/**
 * @file main.js
 * @author Mihai Peteu <mihai.peteu@gmail.com>
 * @copyright 2016 Middle of June.  All rights reserved.
 */

//
// Methods outside of document.ready
//

/**
 * lookupArtist(event)
 * Old school HTML onclick call generated by Events list
 * Needs to be outside document.ready or it'll throw undefined error
 * @param clickEvent Click event and all related info
 */
function lookupArtist(clickEvent) {
    // Recover relevant data from attribute tags
    var artistName = $(clickEvent).data('artist');
    var showUrl = $(clickEvent).data('url');
    var showVenue = $(clickEvent).data('venue');
    var nice_date = $(clickEvent).data('nicedate');

    // Pop up hidden modal
    $('#artistModal').modal('show');

    // Delay Promise chain until dialog is popped open!
    setTimeout(function() {
       
        // Clear existing modal content 
        $('#artist-event').empty();
        $('.modal-title').html(); 

           

        // Append venue name + link
        $('#artist-event').html(
            'Go see ' + artistName + ' at ' + '<a href="' + showUrl + '" class="link">' 
            + showVenue + ' <i class="fa fa-music"></i></a>');
         $('.modal-title').html(artistName + ' / ' + showVenue + ' / ' + nice_date);

        //
        // Events / Artist info promise chain
        //

        // returns $.ajax from Last.fm API
        Events.getArtistInfo(artistName)
            .then(function(artistData) {
                return Events.appendArtistInfo('artist-info', artistData);
            })
            .then(function(artistName) {       
                // returns $.ajax from Youtube API
                return Events.getTopTracks(artistName);
            })
            .then(function(trackData) {
                Events.appendTopTracks('artist-tracks', trackData);
            })

    }, 150);// End setTimeout

}// End lookupArtist

//
// Methods registered after document.ready
//
$(document).ready(function() {
    // Asynchronously load modal template
    $.get('templates/artist-modal.html', function(template) {
        // Inject all those templates at the end of the document.
        $('body').append(template);
    });

    //
    // LISTENERS
    //
    $('#eml').click(function() {
        var emailaddy = reverse($("#eml").data("u")) + '@' + reverse($("#eml").data("d"));
        document.location.href = 'ma' + 'il' + 'to' + ':' + emailaddy;
    });

    $('#gPlusLogin').click(function() {
        var ref = new Firebase("https://blinding-torch-6251.firebaseio.com");
        ref.onAuth(function(authData) {
            if (authData !== null) {
                console.log("Login Success!", authData);
                window.authData = authData;
            } 
            else {
                ref.authWithOAuthRedirect("google", function(error, authData) {
                    if (error) {
                        console.log("Problems Houston...", error);
                    }
                });// End authWithOAuthRedirect
            }// End else
        })// End ref.onAuth
    });

    $('#getPosition').click(function() {
        // Get venues within 25 miles, max 10 results
        getPosition();
    });

    // Get events data ajax call, push to DOM
    $('#getEvents').click(function() {
    // 
    });// End getEvents

    $('#getNearbyVenues').click(function() {
    // Get venues within 25 miles, max 10 results
    getNearbyVenues(25, 4);
    });

    $('#setPageState').click(function() {
    // Parse the hashtag section from URL
    var lastSection = window.location.href.split("/").pop();

    // Save the last visited page
    setPageState(lastSection);
    });


    // 
    // Get list of shows, display them, set click listeners on each Artist
    //
    Events.getEvents(10)
        // Return events $.ajax request
        .then(function(data) {
            // console.log(data);

            // Parse the data into JSON object
            var eventData = JSON.parse(data);

            // Save data to local storage
            UserState.events = eventData.events;

            // JSON data will go into shows-content div
            Events.displayEvents(eventData, 'shows-content');
        })
        // Add old school click listener on parent div (will bubble up)
        .then(function(){  
            // https://davidwalsh.name/event-delegate
            document.getElementById('shows-content').addEventListener("click", function(e) {
                // If any child element was clicked, grab the artist name
                if (e.target && e.target.innerHTML !== '') {
                    // If the click was on an actual link, 
                    //  lookup the artist name, sending along the entire selector
                    if ($(e.target).data('artist') !== undefined) {
                        lookupArtist(e.target);
                    }
                }// End if event.target and artist name not blank
            });// End addEventListener
        });// End add old school click listener

});// End on Document Load
